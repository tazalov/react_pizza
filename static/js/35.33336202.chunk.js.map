{"version":3,"file":"static/js/35.33336202.chunk.js","mappings":"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","sources":["redux/slice/filter/selectors.ts","redux/slice/pizzas/selectors.ts","pages/home/Home.tsx"],"sourcesContent":["import { RootState } from '../../store'\n\nexport const selectFilter = (state: RootState) => state.filter\n\nexport const selectSearchValue = (state: RootState) => state.filter.searchValue\n","import { RootState } from '../../store'\n\nexport const selectPizzas = (state: RootState) => state.pizzas\n","import qs from 'qs'\nimport { FC, useCallback, useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Categories, ErrorBlock, Paginator, PizzaBlock, Skeleton, Sorted } from '../../components'\nimport { sortName } from '../../components/sorted/Sorted'\nimport { selectFilter } from '../../redux/slice/filter/selectors'\nimport {\n  setCategoryId,\n  setCurrentPage,\n  setFilterData,\n  setSortType,\n  toggleDescOrder,\n} from '../../redux/slice/filter/slice'\nimport { SetFilterAT, SortT } from '../../redux/slice/filter/types'\nimport { selectPizzas } from '../../redux/slice/pizzas/selectors'\nimport { fetchPizzas } from '../../redux/slice/pizzas/slice'\nimport { useAppDispatch } from '../../redux/store'\n\nexport const Home: FC = () => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const isRequestSend = useRef<boolean>(false)\n  const isAppMount = useRef<boolean>(false)\n\n  const {\n    categoryId,\n    sort: sortType,\n    descOrder,\n    currentPage,\n    searchValue: search,\n  } = useSelector(selectFilter)\n  const { items, status, error } = useSelector(selectPizzas)\n\n  const changeCategoryId = useCallback((id: number) => {\n    dispatch(setCategoryId(id))\n    dispatch(setCurrentPage(1))\n  }, [])\n\n  const changeSortType = useCallback((sort: SortT) => {\n    dispatch(setSortType(sort))\n  }, [])\n\n  const changeDescOrder = useCallback(() => {\n    dispatch(toggleDescOrder())\n  }, [])\n\n  const changeCurrentPage = useCallback((page: number) => {\n    dispatch(setCurrentPage(page))\n  }, [])\n\n  const getPizzas = async () => {\n    const order = `&order=${descOrder ? 'desc' : 'asc'}`\n    const category = categoryId ? `&category=${categoryId}` : ''\n    const sort = `&sortBy=${sortType.property}`\n    const searchValue = search ? `&title=${search}` : ''\n    dispatch(\n      fetchPizzas({\n        order,\n        category,\n        sort,\n        searchValue,\n        currentPage,\n      }),\n    )\n  }\n\n  useEffect(() => {\n    if (isAppMount.current) {\n      const queryString = qs.stringify({\n        page: currentPage,\n        category: categoryId,\n        sort: sortType.property,\n      })\n      navigate(`?${queryString}`)\n    }\n    isAppMount.current = true\n  }, [categoryId, sortType.property, currentPage])\n\n  useEffect(() => {\n    if (location.search) {\n      const params = qs.parse(location.search.slice(1))\n      const sortItem = sortName.find(el => el.property === params.sort)\n      const filterParams: SetFilterAT = {\n        page: params.page as string,\n        category: params.category as string,\n        sort: sortItem as SortT,\n      }\n      dispatch(setFilterData(filterParams))\n      isRequestSend.current = true\n    }\n    isRequestSend.current = false\n  }, [])\n\n  useEffect(() => {\n    if (!isRequestSend.current) getPizzas()\n\n    isRequestSend.current = false\n\n    window.scrollTo(0, 0)\n  }, [categoryId, sortType.property, descOrder, search, currentPage])\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories id={categoryId} changeId={changeCategoryId} />\n        <Sorted\n          type={sortType}\n          changeType={changeSortType}\n          descOrder={descOrder}\n          toggleDescOrder={changeDescOrder}\n        />\n      </div>\n      <h2 className=\"content__title\">All pizzas</h2>\n      {status === 'error' ? (\n        <ErrorBlock title={error} description={''} />\n      ) : items.length ? (\n        <>\n          {categoryId === 0 && <Paginator changePage={changeCurrentPage} />}\n          <div className=\"content__items\">\n            {status === 'loading'\n              ? [...new Array(4)].map((_, i) => <Skeleton key={i} />)\n              : items.map(el => <PizzaBlock key={el.id} {...el} />)}\n          </div>\n        </>\n      ) : (\n        <ErrorBlock title={'Not found'} description={'Sorry'} />\n      )}\n    </div>\n  )\n}\n"],"names":["selectFilter","state","filter","selectPizzas","pizzas","Home","dispatch","useAppDispatch","navigate","useNavigate","location","useLocation","isRequestSend","useRef","isAppMount","_useSelector","useSelector","categoryId","sortType","sort","descOrder","currentPage","search","searchValue","_useSelector2","items","status","error","changeCategoryId","useCallback","id","setCategoryId","setCurrentPage","changeSortType","setSortType","changeDescOrder","toggleDescOrder","changeCurrentPage","page","getPizzas","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","order","category","wrap","_context","prev","next","concat","property","fetchPizzas","stop","apply","arguments","useEffect","current","queryString","qs","params","slice","sortItem","sortName","find","el","filterParams","setFilterData","window","scrollTo","_jsxs","className","children","_jsx","Categories","changeId","Sorted","type","changeType","ErrorBlock","title","description","length","_Fragment","Paginator","changePage","_toConsumableArray","Array","map","_","i","Skeleton","PizzaBlock","_objectSpread"],"sourceRoot":""}